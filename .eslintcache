[{"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\index.js":"1","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\App.js":"2","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\reportWebVitals.js":"3","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\login.js":"4","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\signup.js":"5","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\util\\auth.js":"6","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\account.js":"7","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\todo.js":"8","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\blog.js":"9","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\admin.js":"10","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\about.js":"11","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\resume.js":"12","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\index.js":"13","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\publicblog.js":"14","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\sidenav.js":"15"},{"size":478,"mtime":1608120609404,"results":"16","hashOfConfig":"17"},{"size":1637,"mtime":1610833118655,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":4188,"mtime":1610831302345,"results":"20","hashOfConfig":"17"},{"size":8056,"mtime":1609328166653,"results":"21","hashOfConfig":"17"},{"size":173,"mtime":1608227208681,"results":"22","hashOfConfig":"17"},{"size":9720,"mtime":1608555376740,"results":"23","hashOfConfig":"17"},{"size":13271,"mtime":1608648371677,"results":"24","hashOfConfig":"17"},{"size":13271,"mtime":1608650891725,"results":"25","hashOfConfig":"17"},{"size":6931,"mtime":1610832958012,"results":"26","hashOfConfig":"17"},{"size":1796,"mtime":1610830953874,"results":"27","hashOfConfig":"17"},{"size":2273,"mtime":1610554405878,"results":"28","hashOfConfig":"17"},{"size":1857,"mtime":1610831259819,"results":"29","hashOfConfig":"17"},{"size":1258,"mtime":1610893868149,"results":"30","hashOfConfig":"17"},{"size":1128,"mtime":1610893242850,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"owbhen",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\index.js",[],["68","69"],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\App.js",["70"],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\reportWebVitals.js",[],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\login.js",["71"],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\signup.js",["72","73"],"import React, { Component, useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center'\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%', // Fix IE 11 issue.\r\n\t\tmarginTop: theme.spacing(3)\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2)\r\n\t},\r\n\tprogess: {\r\n\t\tposition: 'absolute'\r\n\t}\r\n});\r\n\r\n\r\nfunction Signup(props) {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n    },[])   \r\n\r\n    const handleFirstNameChange = (event) => {\r\n        setFirstName(event.target.value)\r\n    }\r\n    const handleLastNameChange = (event) => {\r\n        setLastName(event.target.value)\r\n    }\r\n    const handlePhoneNumberChange = (event) => {\r\n        setPhoneNumber(event.target.value)\r\n    }\r\n    const handleCountryChange = (event) => {\r\n        setCountry(event.target.value)\r\n    }\r\n    const handleUsernameChange = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n    const handleConfirmPasswordChange = (event) => {\r\n        setConfirmPassword(event.target.value)\r\n    }\r\n    const handleErrorsChange = (event) => {\r\n        setErrors(event.target.value)\r\n    };\r\n    // const handleLoadingChange = (event) => {\r\n    //     setLoading(event.target.value)\r\n    // }\r\n\t// handleChange = (event) => {\r\n\t// \tthis.setState({\r\n\t// \t\t[event.target.name]: event.target.value\r\n\t// \t});\r\n\t// };\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\tconst newUserData = {\r\n\t\t\tfirstName: firstName,\r\n\t\t\tlastName: lastName,\r\n\t\t\tphoneNumber: phoneNumber,\r\n\t\t\tcountry: country,\r\n\t\t\tusername: username,\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t\tconfirmPassword: confirmPassword\r\n\t\t};\r\n\t\taxios\r\n\t\t\t.post('/signup', newUserData)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tlocalStorage.setItem('AuthToken', `${response.data.token}`);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tprops.history.push('/');\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n                setErrors(\r\n                    error.response.data\r\n                )\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t});\r\n\t};\r\n\r\n\t\r\n\t\tconst { classes } = props;\r\n\r\n\t\treturn (\r\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<Avatar className={classes.avatar}>\r\n\t\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\t\tSign up\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<form className={classes.form} noValidate>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"firstName\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"firstName\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.firstName}\r\n\t\t\t\t\t\t\t\t\terror={errors.firstName ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleFirstNameChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"lastName\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\tname=\"lastName\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"lastName\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.lastName}\r\n\t\t\t\t\t\t\t\t\terror={errors.lastName ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleLastNameChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"User Name\"\r\n\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.username}\r\n\t\t\t\t\t\t\t\t\terror={errors.username ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleUsernameChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"phoneNumber\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\r\n\t\t\t\t\t\t\t\t\tname=\"phoneNumber\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"phoneNumber\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[7-9]{1}[0-9]{9}\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.phoneNumber}\r\n\t\t\t\t\t\t\t\t\terror={errors.phoneNumber ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handlePhoneNumberChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.email}\r\n\t\t\t\t\t\t\t\t\terror={errors.email ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"country\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Country\"\r\n\t\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"country\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.country}\r\n\t\t\t\t\t\t\t\t\terror={errors.country ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleCountryChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.password}\r\n\t\t\t\t\t\t\t\t\terror={errors.password ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tid=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\tonChange={handleConfirmPasswordChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t\t\tonClick={handleSubmit}\r\n                            disabled={loading || \r\n                                !email || \r\n                                !password ||\r\n                                !firstName || \r\n                                !lastName ||\r\n                                !country || \r\n                                !username || \r\n                                !phoneNumber}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Grid container justify=\"flex-end\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Link href=\"login\" variant=\"body2\">\r\n\t\t\t\t\t\t\t\t\tAlready have an account? Sign in\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n        );\r\n    }\r\n\t\r\n\r\n\r\n\r\nexport default withStyles(styles)(Signup);","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\util\\auth.js",[],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\account.js",["74","75","76","77","78","79","80","81","82","83"],"import React, { Component, useState, useEffect } from 'react';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { Card, CardActions, CardContent, Divider, Button, Grid, TextField } from '@material-ui/core';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport axios from 'axios';\r\nimport { authMiddleWare } from '../util/auth';\r\n\r\n\r\nconst styles = (theme) => ({\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3)\r\n\t},\r\n\ttoolbar: theme.mixins.toolbar,\r\n\troot: {},\r\n\tdetails: {\r\n\t\tdisplay: 'flex'\r\n\t},\r\n\tavatar: {\r\n\t\theight: 110,\r\n\t\twidth: 100,\r\n\t\tflexShrink: 0,\r\n\t\tflexGrow: 0\r\n\t},\r\n\tlocationText: {\r\n\t\tpaddingLeft: '15px'\r\n\t},\r\n\tbuttonProperty: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: '50%'\r\n\t},\r\n\tuiProgess: {\r\n\t\tposition: 'fixed',\r\n\t\tzIndex: '1000',\r\n\t\theight: '31px',\r\n\t\twidth: '31px',\r\n\t\tleft: '50%',\r\n\t\ttop: '35%'\r\n\t},\r\n\tprogess: {\r\n\t\tposition: 'absolute'\r\n\t},\r\n\tuploadButton: {\r\n\t\tmarginLeft: '8px',\r\n\t\tmargin: theme.spacing(1)\r\n\t},\r\n\tcustomError: {\r\n\t\tcolor: 'red',\r\n\t\tfontSize: '0.8rem',\r\n\t\tmarginTop: 10\r\n\t},\r\n\tsubmitButton: {\r\n\t\tmarginTop: '10px'\r\n\t}\r\n});\r\n\r\n//////// FORTSÄTT BYGGA FUNKTIONERNA FÖR CHANGE-BITEN\r\nfunction Account(props) {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [profilePicture, setProfilePicture] = useState('');\r\n    const [uiLoading, setUiLoading] = useState(false);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n    const [imageError, setImageError] = useState('');\r\n    const [errorMsg, setErrorMsg] = useState([]);\r\n    const [imageChange, setImageChange] = useState('');\r\n\r\n\tconst handleFirstNameChange = (event) => {\r\n        setFirstName(event.target.value)\r\n    }\r\n    const handleLastNameChange = (event) => {\r\n        setLastName(event.target.value)\r\n    }\r\n    const handlePhoneNumberChange = (event) => {\r\n        setPhoneNumber(event.target.value)\r\n    }\r\n    const handleCountryChange = (event) => {\r\n        setCountry(event.target.value)\r\n    }\r\n    const handleUsernameChange = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const handleProfilePictureChange = (event) => {\r\n        setProfilePicture(event.target.value)\r\n    }\r\n    const handleUiLoading = (event) => {\r\n        setUiLoading(event.target.value)\r\n    }\r\n    const handleButtonLoading = (event) => {\r\n        setButtonLoading(event.target.value)\r\n    }\r\n    const handleImageError = (event) => {\r\n        setImageError(event.target.value)\r\n    }\r\n    const handleErrorMsg = (event) => {\r\n        setErrorMsg(event.target.value)\r\n    }\r\n    const handleImageChange = (event) => {\r\n        setImageChange(event.target.files[0])\r\n\t};\r\n    useEffect(() => {\r\n        console.log('lolol')\r\n        authMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\taxios\r\n\t\t\t.get('/user')\r\n\t\t\t.then((response) => {\r\n                const {data: {userCredentials}} = response;\r\n                console.log(response.data);\r\n                \r\n                setFirstName(userCredentials.firstName)\r\n                setLastName(userCredentials.lastName)\r\n                setEmail(userCredentials.email)\r\n                setPhoneNumber(userCredentials.phoneNumber)\r\n                setCountry(userCredentials.country)\r\n                setUsername(userCredentials.username)\r\n                setUiLoading(false)\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif (error.response.status === 403) {\r\n\t\t\t\t\tprops.history.push('/login');\r\n\t\t\t\t}\r\n                console.log(error);\r\n                setErrorMsg('Error in retrieving the data')\r\n\t\t\t});\r\n\r\n    },[]) \r\n\t\r\n\r\n\tconst profilePictureHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetUiLoading(true)\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\tlet form_data = new FormData();\r\n\t\tform_data.append('image', props.image);\r\n\t\tform_data.append('content', props.content);\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\taxios\r\n\t\t\t.post('/user/image', form_data, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'content-type': 'multipart/form-data'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif (error.response.status === 403) {\r\n\t\t\t\t\tprops.history.push('/login');\r\n\t\t\t\t}\r\n                console.log(error);\r\n                setUiLoading(false)\r\n                setImageError('Error in posting the data')\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst updateFormValues = (event) => {\r\n        event.preventDefault();\r\n        setButtonLoading(true)\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\tconst formRequest = {\r\n            firstName,\r\n            lastName,\r\n            country\r\n        };\r\n\t\taxios\r\n            .post('/user', formRequest)\r\n\t\t\t.then(() => {\r\n                setButtonLoading(false)\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif (error.response.status === 403) {\r\n\t\t\t\t\tprops.history.push('/login');\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tsetButtonLoading(false)\r\n\t\t\t});\r\n\t};\r\n\r\nconst { classes, ...rest } = props;\r\n\t\tif (uiLoading === true) {\r\n\t\t\treturn (\r\n\t\t\t\t<main className={classes.content}>\r\n\t\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t\t{uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\r\n\t\t\t\t</main>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<main className={classes.content}>\r\n\t\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\r\n\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t<div className={classes.details}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.locationText} gutterBottom variant=\"h4\">\r\n\t\t\t\t\t\t\t\t\t\t{firstName} {lastName}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\tstartIcon={<CloudUploadIcon />}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.uploadButton}\r\n\t\t\t\t\t\t\t\t\t\tonClick={profilePictureHandler}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tUpload Photo\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<input type=\"file\" onChange={handleImageChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t{imageError ? (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.customError}>\r\n\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\tWrong Image Format || Supported Format are PNG and JPG\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.progress} />\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t</Card>\r\n\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\r\n\t\t\t\t\t\t<form autoComplete=\"off\" noValidate>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"First name\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={firstName}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleFirstNameChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Last name\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"lastName\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={lastName}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleLastNameChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={phoneNumber}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handlePhoneNumberChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"User Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"userHandle\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleUsernameChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Country\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={country}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleCountryChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t<CardActions />\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\tonClick={updateFormValues}\r\n\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\tbuttonLoading ||\r\n\t\t\t\t\t\t\t!firstName ||\r\n\t\t\t\t\t\t\t!lastName ||\r\n\t\t\t\t\t\t\t!country\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave details\r\n\t\t\t\t\t\t{buttonLoading && <CircularProgress size={30} className={classes.progess} />}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</main>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n// }\r\n\r\nexport default withStyles(styles)(Account);","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\todo.js",["84","85","86"],"import React, { Component, useEffect, useState } from 'react'\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport axios from 'axios';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { authMiddleWare } from '../util/auth';\r\n\r\n\r\nconst styles = (theme) => ({\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n\r\n\ttitle: {\r\n\t\tmarginLeft: theme.spacing(2),\r\n\t\tflex: 1\r\n\t},\r\n\tsubmitButton: {\r\n\t\tdisplay: 'block',\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tposition: 'absolute',\r\n\t\ttop: 14,\r\n\t\tright: 10\r\n\t},\r\n\tfloatingButton: {\r\n\t\tposition: 'fixed',\r\n\t\tbottom: 0,\r\n\t\tright: 0\r\n\t},\r\n\tform: {\r\n\t\twidth: '98%',\r\n\t\tmarginLeft: 13,\r\n\t\tmarginTop: theme.spacing(3)\r\n\t},\r\n\ttoolbar: theme.mixins.toolbar,\r\n\troot: {\r\n\t\tminWidth: 470\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t\ttransform: 'scale(0.8)'\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12\r\n\t},\r\n\tuiProgess: {\r\n\t\tposition: 'fixed',\r\n\t\tzIndex: '1000',\r\n\t\theight: '31px',\r\n\t\twidth: '31px',\r\n\t\tleft: '50%',\r\n\t\ttop: '35%'\r\n\t},\r\n\tdialogeStyle: {\r\n\t\tmaxWidth: '50%'\r\n\t},\r\n\tviewRoot: {\r\n\t\tmargin: 0,\r\n\t\tpadding: theme.spacing(2)\r\n\t},\r\n\tcloseButton: {\r\n\t\tposition: 'absolute',\r\n\t\tright: theme.spacing(1),\r\n\t\ttop: theme.spacing(1),\r\n\t\tcolor: theme.palette.grey[500]\r\n\t}\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nfunction Todo(props) {\r\n    const [todos, setTodos] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [todoId, setTodoId] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [uiLoading, setUiLoading] = useState(true);\r\n    const [buttonType, setButtonType] = useState('');\r\n    const [viewOpen, setViewOpen] = useState(false);\r\n\r\n    const handleTitleChange = (event) => {\r\n        setTitle(event.target.value)\r\n    }\r\n    const handleBodyChange = (event) => {\r\n        setBody(event.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\taxios\r\n\t\t\t.get('/todos')\r\n\t\t\t.then((response) => {\r\n                setTodos(response.data)\r\n                setUiLoading(false)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n    },[])  \r\n\r\n\tconst deleteTodoHandler = (todo) => {\r\n        console.log(todo)\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\tconst {todoId} = todo;\r\n\t\taxios\r\n\t\t\t.delete(`todo/${todoId}`)\r\n\t\t\t.then((response) => {\r\n                console.log(response)\r\n                ///Work in progress, state ist~ :-D\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tconst handleEditClickOpen = (todo) => {\r\n        setTitle(todo.title)\r\n        setBody(todo.body)\r\n        setTodoId(todo.todoId)\r\n        setButtonType('Edit')\r\n        setOpen(true)\r\n\t}\r\n\r\n\tconst handleViewOpen = (todo) => {\r\n        setTitle(todo.title)\r\n        setBody(todo.body)\r\n        setViewOpen(true)\r\n\t}\r\n\r\n\r\n    const DialogTitle = withStyles(styles)((props) => {\r\n        const { children, classes, onClose, ...other } = props;\r\n        return (\r\n            <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n                <Typography variant=\"h6\">{children}</Typography>\r\n                {onClose ? (\r\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ) : null}\r\n            </MuiDialogTitle>\r\n        );\r\n    });\r\n\r\n    const DialogContent = withStyles((theme) => ({\r\n        viewRoot: {\r\n            padding: theme.spacing(2)\r\n        }\r\n    }))(MuiDialogContent);\r\n\r\n    dayjs.extend(relativeTime);\r\n    const { classes } = props;\r\n    // const { open, errors, viewOpen } = state;\r\n    ///Behöver jag dessa?!?!?!\r\n    const handleClickOpen = () => {\r\n        setTodoId('')\r\n        setTitle('')\r\n        setBody('')\r\n        setButtonType('')\r\n        setOpen(true)\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        authMiddleWare(props.history);\r\n        event.preventDefault();\r\n        const userTodo = {\r\n            title,\r\n            body,\r\n        };\r\n        let options = {};\r\n        if (buttonType === 'Edit') {\r\n            options = {\r\n                url: `/todo/${todoId}`,\r\n                method: 'put',\r\n                data: userTodo\r\n            };\r\n        } else {\r\n            options = {\r\n                url: '/todo',\r\n                method: 'post',\r\n                data: userTodo\r\n            };\r\n        }\r\n    const authToken = localStorage.getItem('AuthToken');\r\n    axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n    axios(options)\r\n        .then(() => {\r\n            setOpen(false)\r\n            window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n            setOpen(true)\r\n            setErrors(error.response.data)\r\n            // this.setState({ open: true, errors: error.response.data });\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    const handleViewClose = () => {\r\n        setViewOpen(false)\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        setOpen(false)\r\n    };\r\n\r\n    if (uiLoading === true) {\r\n        return (\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\r\n            </main>\r\n        );\r\n    } else {\r\n        return (\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n\r\n                <IconButton\r\n                    className={classes.floatingButton}\r\n                    color=\"primary\"\r\n                    aria-label=\"Add Todo\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    <AddCircleIcon style={{ fontSize: 60 }} />\r\n                </IconButton>\r\n                <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                    <AppBar className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                {buttonType === 'Edit' ? 'Edit Todo' : 'Create a new Todo'}\r\n                            </Typography>\r\n                            <Button\r\n                                autoFocus\r\n                                color=\"inherit\"\r\n                                onClick={handleSubmit}\r\n                                className={classes.submitButton}\r\n                            >\r\n                                {buttonType === 'Edit' ? 'Save' : 'Submit'}\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"todoTitle\"\r\n                                    label=\"Todo Title\"\r\n                                    name=\"title\"\r\n                                    autoComplete=\"todoTitle\"\r\n                                    helperText={errors.title}\r\n                                    value={title}\r\n                                    error={errors.title ? true : false}\r\n                                    onChange={handleTitleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"todoDetails\"\r\n                                    label=\"Todo Details\"\r\n                                    name=\"body\"\r\n                                    autoComplete=\"todoDetails\"\r\n                                    multiline\r\n                                    rows={25}\r\n                                    rowsMax={25}\r\n                                    helperText={errors.body}\r\n                                    error={errors.body ? true : false}\r\n                                    onChange={handleBodyChange}\r\n                                    value={body}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Dialog>\r\n\r\n                <Grid container spacing={2}>\r\n                    {todos.map((todo) => (\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Card className={classes.root} variant=\"outlined\">\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        {todo.title}\r\n                                    </Typography>\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        {dayjs(todo.createdAt).fromNow()}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        {`${todo.body.substring(0, 65)}`}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => handleViewOpen( todo )}>\r\n                                        {' '}\r\n                                        View{' '}\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => handleEditClickOpen( todo )}>\r\n                                        Edit\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => deleteTodoHandler( todo )}>\r\n                                        Delete\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <Dialog\r\n                    onClose={handleViewClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={viewOpen}\r\n                    fullWidth\r\n                    classes={{ paperFullWidth: classes.dialogeStyle }}\r\n                >\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleViewClose}>\r\n                        {title}\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"todoDetails\"\r\n                            name=\"body\"\r\n                            multiline\r\n                            readonly\r\n                            rows={1}\r\n                            rowsMax={25}\r\n                            value={body}\r\n                            InputProps={{\r\n                                disableUnderline: true\r\n                            }}\r\n                        />\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\t\r\n\r\n\r\n\r\nexport default (withStyles(styles)(Todo));","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\blog.js",["87","88","89"],"import React, { Component, useEffect, useState } from 'react'\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport axios from 'axios';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { authMiddleWare } from '../util/auth';\r\n\r\n\r\nconst styles = (theme) => ({\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n\r\n\ttitle: {\r\n\t\tmarginLeft: theme.spacing(2),\r\n\t\tflex: 1\r\n\t},\r\n\tsubmitButton: {\r\n\t\tdisplay: 'block',\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tposition: 'absolute',\r\n\t\ttop: 14,\r\n\t\tright: 10\r\n\t},\r\n\tfloatingButton: {\r\n\t\tposition: 'fixed',\r\n\t\tbottom: 0,\r\n\t\tright: 0\r\n\t},\r\n\tform: {\r\n\t\twidth: '98%',\r\n\t\tmarginLeft: 13,\r\n\t\tmarginTop: theme.spacing(3)\r\n\t},\r\n\ttoolbar: theme.mixins.toolbar,\r\n\troot: {\r\n\t\tminWidth: 470\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t\ttransform: 'scale(0.8)'\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12\r\n\t},\r\n\tuiProgess: {\r\n\t\tposition: 'fixed',\r\n\t\tzIndex: '1000',\r\n\t\theight: '31px',\r\n\t\twidth: '31px',\r\n\t\tleft: '50%',\r\n\t\ttop: '35%'\r\n\t},\r\n\tdialogeStyle: {\r\n\t\tmaxWidth: '50%'\r\n\t},\r\n\tviewRoot: {\r\n\t\tmargin: 0,\r\n\t\tpadding: theme.spacing(2)\r\n\t},\r\n\tcloseButton: {\r\n\t\tposition: 'absolute',\r\n\t\tright: theme.spacing(1),\r\n\t\ttop: theme.spacing(1),\r\n\t\tcolor: theme.palette.grey[500]\r\n\t}\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nfunction Blog(props) {\r\n    const [blogs, setBlogs] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [blogId, setBlogId] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [uiLoading, setUiLoading] = useState(true);\r\n    const [buttonType, setButtonType] = useState('');\r\n    const [viewOpen, setViewOpen] = useState(false);\r\n\r\n    const handleTitleChange = (event) => {\r\n        setTitle(event.target.value)\r\n    }\r\n    const handleBodyChange = (event) => {\r\n        setBody(event.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\taxios\r\n\t\t\t.get('/blogs')\r\n\t\t\t.then((response) => {\r\n                setBlogs(response.data)\r\n                setUiLoading(false)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n    },[])  \r\n\r\n\tconst deleteBlogHandler = (blog) => {\r\n        console.log(blog)\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\tconst {blogId} = blog;\r\n\t\taxios\r\n\t\t\t.delete(`blog/${blogId}`)\r\n\t\t\t.then((response) => {\r\n                console.log(response)\r\n                ///Work in progress, state ist~ :-D\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tconst handleEditClickOpen = (blog) => {\r\n        setTitle(blog.title)\r\n        setBody(blog.body)\r\n        setBlogId(blog.blogId)\r\n        setButtonType('Edit')\r\n        setOpen(true)\r\n\t}\r\n\r\n\tconst handleViewOpen = (blog) => {\r\n        setTitle(blog.title)\r\n        setBody(blog.body)\r\n        setViewOpen(true)\r\n\t}\r\n\r\n\r\n    const DialogTitle = withStyles(styles)((props) => {\r\n        const { children, classes, onClose, ...other } = props;\r\n        return (\r\n            <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n                <Typography variant=\"h6\">{children}</Typography>\r\n                {onClose ? (\r\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ) : null}\r\n            </MuiDialogTitle>\r\n        );\r\n    });\r\n\r\n    const DialogContent = withStyles((theme) => ({\r\n        viewRoot: {\r\n            padding: theme.spacing(2)\r\n        }\r\n    }))(MuiDialogContent);\r\n\r\n    dayjs.extend(relativeTime);\r\n    const { classes } = props;\r\n    // const { open, errors, viewOpen } = state;\r\n    ///Behöver jag dessa?!?!?!\r\n    const handleClickOpen = () => {\r\n        setBlogId('')\r\n        setTitle('')\r\n        setBody('')\r\n        setButtonType('')\r\n        setOpen(true)\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        authMiddleWare(props.history);\r\n        event.preventDefault();\r\n        const userBlog = {\r\n            title,\r\n            body,\r\n        };\r\n        let options = {};\r\n        if (buttonType === 'Edit') {\r\n            options = {\r\n                url: `/blog/${blogId}`,\r\n                method: 'put',\r\n                data: userBlog\r\n            };\r\n        } else {\r\n            options = {\r\n                url: '/blog',\r\n                method: 'post',\r\n                data: userBlog\r\n            };\r\n        }\r\n    const authToken = localStorage.getItem('AuthToken');\r\n    axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n    axios(options)\r\n        .then(() => {\r\n            setOpen(false)\r\n            window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n            setOpen(true)\r\n            setErrors(error.response.data)\r\n            // this.setState({ open: true, errors: error.response.data });\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    const handleViewClose = () => {\r\n        setViewOpen(false)\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        setOpen(false)\r\n    };\r\n\r\n    if (uiLoading === true) {\r\n        return (\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\r\n            </main>\r\n        );\r\n    } else {\r\n        return (\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n\r\n                <IconButton\r\n                    className={classes.floatingButton}\r\n                    color=\"primary\"\r\n                    aria-label=\"Add Blog\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    <AddCircleIcon style={{ fontSize: 60 }} />\r\n                </IconButton>\r\n                <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                    <AppBar className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                {buttonType === 'Edit' ? 'Edit Blog' : 'Create a new Blog'}\r\n                            </Typography>\r\n                            <Button\r\n                                autoFocus\r\n                                color=\"inherit\"\r\n                                onClick={handleSubmit}\r\n                                className={classes.submitButton}\r\n                            >\r\n                                {buttonType === 'Edit' ? 'Save' : 'Submit'}\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"blogTitle\"\r\n                                    label=\"Blog Title\"\r\n                                    name=\"title\"\r\n                                    autoComplete=\"blogTitle\"\r\n                                    helperText={errors.title}\r\n                                    value={title}\r\n                                    error={errors.title ? true : false}\r\n                                    onChange={handleTitleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"blogDetails\"\r\n                                    label=\"Blog Details\"\r\n                                    name=\"body\"\r\n                                    autoComplete=\"blogDetails\"\r\n                                    multiline\r\n                                    rows={25}\r\n                                    rowsMax={25}\r\n                                    helperText={errors.body}\r\n                                    error={errors.body ? true : false}\r\n                                    onChange={handleBodyChange}\r\n                                    value={body}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Dialog>\r\n\r\n                <Grid container spacing={2}>\r\n                    {blogs.map((blog) => (\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Card className={classes.root} variant=\"outlined\">\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        {blog.title}\r\n                                    </Typography>\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        {dayjs(blog.createdAt).fromNow()}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        {`${blog.body.substring(0, 65)}`}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => handleViewOpen( blog )}>\r\n                                        {' '}\r\n                                        View{' '}\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => handleEditClickOpen( blog )}>\r\n                                        Edit\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => deleteBlogHandler( blog )}>\r\n                                        Delete\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <Dialog\r\n                    onClose={handleViewClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={viewOpen}\r\n                    fullWidth\r\n                    classes={{ paperFullWidth: classes.dialogeStyle }}\r\n                >\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleViewClose}>\r\n                        {title}\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"blogDetails\"\r\n                            name=\"body\"\r\n                            multiline\r\n                            readonly\r\n                            rows={1}\r\n                            rowsMax={25}\r\n                            value={body}\r\n                            InputProps={{\r\n                                disableUnderline: true\r\n                            }}\r\n                        />\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\t\r\n\r\n\r\n\r\nexport default (withStyles(styles)(Blog));","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\admin.js",["90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\about.js",["107","108"],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\resume.js",["109","110"],"import React from 'react'\r\nimport '../util/global.scss';\r\nimport '../util/resume.scss';\r\nimport background from '../util/images/background.jpg';\r\nimport leon1 from '../util/images/leon1.png'\r\n\r\nimport Sidenav from '../components/sidenav';\r\n\r\nexport default function Resume() {\r\n    return(<div className=\"containerHtml\">\r\n\r\n        <div className=\"lines\">\r\n            \r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n        </div>\r\n        <Sidenav />\r\n        <div className=\"resumeMain\">\r\n            <div className=\"resumeTitle\">\r\n                LEON LINDQVIST\r\n            </div>\r\n            <div className=\"resumeSubtitle\">\r\n                FRONT END DEVELOPER IN THE MAKING\r\n            </div>\r\n            <div className=\"resumeContainer\">\r\n            <img className=\"resumeImg\" src={leon1} />\r\n            <div className=\"resumeText speech-bubble-resume\">\r\n            <div className=\"resumeSummary\">\r\n                <div className=\"studies\"><b>2019-2021 - Front End Developer at Medieinstitutet</b></div>\r\n                <div><b>2020-2021 - Support Technician at Tieto</b><div>First line support towards big healthcare organisations</div></div>\r\n                <div><b>2018-2019 - IT Admin/Technician at Berättarministeriet</b><div>Full IT Responsibility in a Mac-oriented company </div></div>\r\n                <div><b>2018-2018 - Technician/Assembler at Paam Systems AB</b><div>Installing and servicing high security safes</div></div>\r\n                <div><b>2017-2018 - Support Technician at Nobina</b><div>First-Second-Thirdline Support for the nordic branches</div></div>\r\n                <div><b>2009-2016 - IT Administrator at Birka Cruises</b><div>Full spectrum of IT administration, from purchase and installation to maintenance.</div></div>\r\n                <div><b>2008-2009 - Hardware Technician at Telia</b><div>Hardware installation / purchase</div></div>\r\n            </div>\r\n\r\n            </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div className=\"copyrightInfo\">\r\n            <div className=\"info\">leon.lindqvist@gmail.com</div>\r\n            <div className=\"info\">© 2020 Leon Lindqvist</div>\r\n        </div>\r\n            \r\n\r\n    </div>)\r\n}\r\n\r\n","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\index.js",["111","112"],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\publicblog.js",[],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\sidenav.js",["113","114","115","116","117","118","119","120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":8,"column":8,"nodeType":"127","messageId":"128","endLine":8,"endColumn":12},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"130","line":82,"column":11,"nodeType":"127","messageId":"128","endLine":82,"endColumn":29},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"131","line":71,"column":12,"nodeType":"127","messageId":"128","endLine":71,"endColumn":26},{"ruleId":"125","severity":1,"message":"132","line":75,"column":12,"nodeType":"127","messageId":"128","endLine":75,"endColumn":20},{"ruleId":"125","severity":1,"message":"133","line":76,"column":12,"nodeType":"127","messageId":"128","endLine":76,"endColumn":23},{"ruleId":"125","severity":1,"message":"134","line":96,"column":11,"nodeType":"127","messageId":"128","endLine":96,"endColumn":37},{"ruleId":"125","severity":1,"message":"135","line":99,"column":11,"nodeType":"127","messageId":"128","endLine":99,"endColumn":26},{"ruleId":"125","severity":1,"message":"136","line":102,"column":11,"nodeType":"127","messageId":"128","endLine":102,"endColumn":30},{"ruleId":"125","severity":1,"message":"137","line":105,"column":11,"nodeType":"127","messageId":"128","endLine":105,"endColumn":27},{"ruleId":"125","severity":1,"message":"138","line":108,"column":11,"nodeType":"127","messageId":"128","endLine":108,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":141,"column":7,"nodeType":"141","endLine":141,"endColumn":9,"suggestions":"142"},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":59,"column":2,"nodeType":"145","messageId":"146","endLine":59,"endColumn":9},{"ruleId":"139","severity":1,"message":"140","line":130,"column":7,"nodeType":"141","endLine":130,"endColumn":9,"suggestions":"147"},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":59,"column":2,"nodeType":"145","messageId":"146","endLine":59,"endColumn":9},{"ruleId":"139","severity":1,"message":"140","line":130,"column":7,"nodeType":"141","endLine":130,"endColumn":9,"suggestions":"148"},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"149","line":69,"column":12,"nodeType":"127","messageId":"128","endLine":69,"endColumn":18},{"ruleId":"125","severity":1,"message":"150","line":69,"column":20,"nodeType":"127","messageId":"128","endLine":69,"endColumn":29},{"ruleId":"125","severity":1,"message":"151","line":72,"column":12,"nodeType":"127","messageId":"128","endLine":72,"endColumn":23},{"ruleId":"125","severity":1,"message":"152","line":73,"column":12,"nodeType":"127","messageId":"128","endLine":73,"endColumn":19},{"ruleId":"125","severity":1,"message":"153","line":74,"column":12,"nodeType":"127","messageId":"128","endLine":74,"endColumn":20},{"ruleId":"125","severity":1,"message":"154","line":75,"column":12,"nodeType":"127","messageId":"128","endLine":75,"endColumn":17},{"ruleId":"125","severity":1,"message":"155","line":78,"column":12,"nodeType":"127","messageId":"128","endLine":78,"endColumn":17},{"ruleId":"125","severity":1,"message":"156","line":78,"column":19,"nodeType":"127","messageId":"128","endLine":78,"endColumn":27},{"ruleId":"125","severity":1,"message":"132","line":79,"column":12,"nodeType":"127","messageId":"128","endLine":79,"endColumn":20},{"ruleId":"125","severity":1,"message":"157","line":80,"column":12,"nodeType":"127","messageId":"128","endLine":80,"endColumn":24},{"ruleId":"125","severity":1,"message":"158","line":80,"column":26,"nodeType":"127","messageId":"128","endLine":80,"endColumn":41},{"ruleId":"125","severity":1,"message":"159","line":88,"column":11,"nodeType":"127","messageId":"128","endLine":88,"endColumn":28},{"ruleId":"125","severity":1,"message":"160","line":92,"column":11,"nodeType":"127","messageId":"128","endLine":92,"endColumn":24},{"ruleId":"125","severity":1,"message":"161","line":96,"column":11,"nodeType":"127","messageId":"128","endLine":96,"endColumn":25},{"ruleId":"125","severity":1,"message":"162","line":104,"column":11,"nodeType":"127","messageId":"128","endLine":104,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":140,"column":4,"nodeType":"141","endLine":140,"endColumn":6,"suggestions":"163"},{"ruleId":"125","severity":1,"message":"164","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":26,"column":13,"nodeType":"167","endLine":26,"endColumn":53},{"ruleId":"125","severity":1,"message":"164","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":27,"column":13,"nodeType":"167","endLine":27,"endColumn":54},{"ruleId":"125","severity":1,"message":"168","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":13},{"ruleId":"165","severity":1,"message":"166","line":19,"column":17,"nodeType":"167","endLine":19,"endColumn":57},{"ruleId":"125","severity":1,"message":"169","line":7,"column":22,"nodeType":"127","messageId":"128","endLine":7,"endColumn":28},{"ruleId":"125","severity":1,"message":"170","line":8,"column":5,"nodeType":"127","messageId":"128","endLine":8,"endColumn":11},{"ruleId":"125","severity":1,"message":"171","line":9,"column":5,"nodeType":"127","messageId":"128","endLine":9,"endColumn":10},{"ruleId":"125","severity":1,"message":"172","line":11,"column":5,"nodeType":"127","messageId":"128","endLine":11,"endColumn":18},{"ruleId":"125","severity":1,"message":"173","line":12,"column":5,"nodeType":"127","messageId":"128","endLine":12,"endColumn":14},{"ruleId":"125","severity":1,"message":"174","line":17,"column":12,"nodeType":"127","messageId":"128","endLine":17,"endColumn":19},{"ruleId":"125","severity":1,"message":"175","line":17,"column":21,"nodeType":"127","messageId":"128","endLine":17,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":29,"column":13,"nodeType":"167","endLine":29,"endColumn":88},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'blog' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'handleErrorsChange' is assigned a value but never used.","'profilePicture' is assigned a value but never used.","'errorMsg' is assigned a value but never used.","'imageChange' is assigned a value but never used.","'handleProfilePictureChange' is assigned a value but never used.","'handleUiLoading' is assigned a value but never used.","'handleButtonLoading' is assigned a value but never used.","'handleImageError' is assigned a value but never used.","'handleErrorMsg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["178"],"no-dupe-keys","Duplicate key 'toolbar'.","ObjectExpression","unexpected",["179"],["180"],"'render' is assigned a value but never used.","'setRender' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'country' is assigned a value but never used.","'username' is assigned a value but never used.","'email' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'imageLoading' is assigned a value but never used.","'setimageLoading' is assigned a value but never used.","'loadDashboardPage' is assigned a value but never used.","'loadAboutPage' is assigned a value but never used.","'loadResumePage' is assigned a value but never used.","'loadTodoPage' is assigned a value but never used.",["181"],"'background' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'bgpic' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'logoImg' is assigned a value but never used.","'setLogoImg' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"182","fix":"184"},{"desc":"182","fix":"185"},{"desc":"182","fix":"186"},"Update the dependencies array to be: [props.history]",{"range":"187","text":"188"},{"range":"189","text":"188"},{"range":"190","text":"188"},{"range":"191","text":"188"},[4138,4140],"[props.history]",[3438,3440],[3438,3440],[4188,4190]]