[{"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\index.js":"1","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\App.js":"2","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\reportWebVitals.js":"3","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\login.js":"4","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\signup.js":"5","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\util\\auth.js":"6","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\account.js":"7","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\todo.js":"8","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\blog.js":"9","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\admin.js":"10","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\about.js":"11","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\resume.js":"12","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\index.js":"13","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\publicblog.js":"14","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\sidenav.js":"15"},{"size":478,"mtime":1608120609404,"results":"16","hashOfConfig":"17"},{"size":1637,"mtime":1610553111336,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":4236,"mtime":1609323946970,"results":"20","hashOfConfig":"17"},{"size":8056,"mtime":1609328166653,"results":"21","hashOfConfig":"17"},{"size":173,"mtime":1608227208681,"results":"22","hashOfConfig":"17"},{"size":9720,"mtime":1608555376740,"results":"23","hashOfConfig":"17"},{"size":13271,"mtime":1608648371677,"results":"24","hashOfConfig":"17"},{"size":13271,"mtime":1608650891725,"results":"25","hashOfConfig":"17"},{"size":7176,"mtime":1609325247828,"results":"26","hashOfConfig":"17"},{"size":1827,"mtime":1610480817967,"results":"27","hashOfConfig":"17"},{"size":2273,"mtime":1610554405878,"results":"28","hashOfConfig":"17"},{"size":2417,"mtime":1610543183377,"results":"29","hashOfConfig":"17"},{"size":1246,"mtime":1610393541782,"results":"30","hashOfConfig":"17"},{"size":1861,"mtime":1610553161612,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"owbhen",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"34"},"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\index.js",[],["73","74"],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\App.js",["75"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './util/global.scss';\nimport login from './pages/login';\nimport signup from './pages/signup';\nimport admin from './pages/admin';\nimport account from './components/account';\nimport blog from './components/blog'\nimport about from './pages/about';\nimport resume from './pages/resume';\nimport dashboard from './pages';\nimport publicblog from './pages/publicblog';\nimport './util/_mixins.scss';\nimport 'normalize.css'\n\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tlight: '#33c9dc',\n\t\t\tmain: '#FF5722',\n\t\t\tdark: '#d50000',\n\t\t\tcontrastText: '#fff'\n\t\t}\n\t}\n});\n\n\nfunction App() {\n  return (\n    <div>\n      <MuiThemeProvider theme={theme}>\n      <Router>\n        <div>\n          <Switch>\n              <Route exact path=\"/login\" component={login}/>\n              <Route exact path=\"/signup\" component={signup}/>\n              <Route exact path=\"/admin\" component={admin}/>\n              <Route exact path=\"/account\" component={account}/>\n              {/* <Route exact path=\"/blog\" component={blog}/> */}\n              <Route exact path=\"/publicblog\" component={publicblog}/>\n              <Route exact path=\"/about\" component={about}/>\n              <Route exact path=\"/resume\" component={resume}/>\n              <Route exact path=\"/\" component={dashboard}/>\n          </Switch>\n        </div>\n      </Router>\n      </MuiThemeProvider>\n    </div>\n  );\n}\nexport default App;","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\reportWebVitals.js",[],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\login.js",["76"],"import React, { Component, useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport axios from 'axios';\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    },\r\n    customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem',\r\n        marginTop: 10\r\n    },\r\n    progess: {\r\n        position: 'absolute'\r\n    }\r\n});\r\n// props? \r\nfunction Login(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n    },[])   \r\n\r\n\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n\tconst handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n\t\tconst userData = {\r\n\t\t\temail: email,\r\n\t\t\tpassword: password\r\n\t\t};\r\n\t\taxios\r\n\t\t\t.post('/login', userData)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tlocalStorage.setItem('AuthToken', `Bearer ${response.data.token}`);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tprops.history.push('/admin');\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n                setErrors(\r\n                   error.response.data,\t\t\r\n                )\t\t\t\t\r\n                setLoading(false)\r\n\t\t\t});\r\n\t};\r\n    \r\n\r\n\t\tconst { classes } = props;\r\n\t\t\r\n\t\treturn ( <div>\r\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<Avatar className={classes.avatar}>\r\n\t\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<form className={classes.form} noValidate>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\thelperText={errors.email}\r\n\t\t\t\t\t\t\terror={errors.email ? true : false}\r\n\t\t\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\thelperText={errors.password}\r\n\t\t\t\t\t\t\terror={errors.password ? true : false}\r\n\t\t\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t\tdisabled={loading || !email || !password}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Link href=\"signup\" variant=\"body2\">\r\n\t\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{errors.general && (\r\n\t\t\t\t\t\t\t<Typography variant=\"body2\" className={classes.customError}>\r\n\t\t\t\t\t\t\t\t{errors.general}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n            </div>\r\n\t\t);\r\n    }\r\nexport default withStyles(styles)(Login);\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\signup.js",["77","78"],"import React, { Component, useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst styles = (theme) => ({\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center'\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%', // Fix IE 11 issue.\r\n\t\tmarginTop: theme.spacing(3)\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2)\r\n\t},\r\n\tprogess: {\r\n\t\tposition: 'absolute'\r\n\t}\r\n});\r\n\r\n\r\nfunction Signup(props) {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n    },[])   \r\n\r\n    const handleFirstNameChange = (event) => {\r\n        setFirstName(event.target.value)\r\n    }\r\n    const handleLastNameChange = (event) => {\r\n        setLastName(event.target.value)\r\n    }\r\n    const handlePhoneNumberChange = (event) => {\r\n        setPhoneNumber(event.target.value)\r\n    }\r\n    const handleCountryChange = (event) => {\r\n        setCountry(event.target.value)\r\n    }\r\n    const handleUsernameChange = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n    const handleConfirmPasswordChange = (event) => {\r\n        setConfirmPassword(event.target.value)\r\n    }\r\n    const handleErrorsChange = (event) => {\r\n        setErrors(event.target.value)\r\n    };\r\n    // const handleLoadingChange = (event) => {\r\n    //     setLoading(event.target.value)\r\n    // }\r\n\t// handleChange = (event) => {\r\n\t// \tthis.setState({\r\n\t// \t\t[event.target.name]: event.target.value\r\n\t// \t});\r\n\t// };\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetLoading(true);\r\n\t\tconst newUserData = {\r\n\t\t\tfirstName: firstName,\r\n\t\t\tlastName: lastName,\r\n\t\t\tphoneNumber: phoneNumber,\r\n\t\t\tcountry: country,\r\n\t\t\tusername: username,\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t\tconfirmPassword: confirmPassword\r\n\t\t};\r\n\t\taxios\r\n\t\t\t.post('/signup', newUserData)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tlocalStorage.setItem('AuthToken', `${response.data.token}`);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tprops.history.push('/');\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n                setErrors(\r\n                    error.response.data\r\n                )\r\n\t\t\t\tsetLoading(false)\r\n\t\t\t});\r\n\t};\r\n\r\n\t\r\n\t\tconst { classes } = props;\r\n\r\n\t\treturn (\r\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<Avatar className={classes.avatar}>\r\n\t\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\t\tSign up\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<form className={classes.form} noValidate>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"firstName\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"firstName\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.firstName}\r\n\t\t\t\t\t\t\t\t\terror={errors.firstName ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleFirstNameChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"lastName\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\t\t\tname=\"lastName\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"lastName\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.lastName}\r\n\t\t\t\t\t\t\t\t\terror={errors.lastName ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleLastNameChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"User Name\"\r\n\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"username\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.username}\r\n\t\t\t\t\t\t\t\t\terror={errors.username ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleUsernameChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"phoneNumber\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\r\n\t\t\t\t\t\t\t\t\tname=\"phoneNumber\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"phoneNumber\"\r\n\t\t\t\t\t\t\t\t\tpattern=\"[7-9]{1}[0-9]{9}\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.phoneNumber}\r\n\t\t\t\t\t\t\t\t\terror={errors.phoneNumber ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handlePhoneNumberChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.email}\r\n\t\t\t\t\t\t\t\t\terror={errors.email ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tid=\"country\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Country\"\r\n\t\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"country\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.country}\r\n\t\t\t\t\t\t\t\t\terror={errors.country ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handleCountryChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\thelperText={errors.password}\r\n\t\t\t\t\t\t\t\t\terror={errors.password ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\tid=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\t\tonChange={handleConfirmPasswordChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t\t\tonClick={handleSubmit}\r\n                            disabled={loading || \r\n                                !email || \r\n                                !password ||\r\n                                !firstName || \r\n                                !lastName ||\r\n                                !country || \r\n                                !username || \r\n                                !phoneNumber}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t{loading && <CircularProgress size={30} className={classes.progess} />}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Grid container justify=\"flex-end\">\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t<Link href=\"login\" variant=\"body2\">\r\n\t\t\t\t\t\t\t\t\tAlready have an account? Sign in\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n        );\r\n    }\r\n\t\r\n\r\n\r\n\r\nexport default withStyles(styles)(Signup);","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\util\\auth.js",[],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\account.js",["79","80","81","82","83","84","85","86","87","88"],"import React, { Component, useState, useEffect } from 'react';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { Card, CardActions, CardContent, Divider, Button, Grid, TextField } from '@material-ui/core';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport axios from 'axios';\r\nimport { authMiddleWare } from '../util/auth';\r\n\r\n\r\nconst styles = (theme) => ({\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3)\r\n\t},\r\n\ttoolbar: theme.mixins.toolbar,\r\n\troot: {},\r\n\tdetails: {\r\n\t\tdisplay: 'flex'\r\n\t},\r\n\tavatar: {\r\n\t\theight: 110,\r\n\t\twidth: 100,\r\n\t\tflexShrink: 0,\r\n\t\tflexGrow: 0\r\n\t},\r\n\tlocationText: {\r\n\t\tpaddingLeft: '15px'\r\n\t},\r\n\tbuttonProperty: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: '50%'\r\n\t},\r\n\tuiProgess: {\r\n\t\tposition: 'fixed',\r\n\t\tzIndex: '1000',\r\n\t\theight: '31px',\r\n\t\twidth: '31px',\r\n\t\tleft: '50%',\r\n\t\ttop: '35%'\r\n\t},\r\n\tprogess: {\r\n\t\tposition: 'absolute'\r\n\t},\r\n\tuploadButton: {\r\n\t\tmarginLeft: '8px',\r\n\t\tmargin: theme.spacing(1)\r\n\t},\r\n\tcustomError: {\r\n\t\tcolor: 'red',\r\n\t\tfontSize: '0.8rem',\r\n\t\tmarginTop: 10\r\n\t},\r\n\tsubmitButton: {\r\n\t\tmarginTop: '10px'\r\n\t}\r\n});\r\n\r\n//////// FORTSÄTT BYGGA FUNKTIONERNA FÖR CHANGE-BITEN\r\nfunction Account(props) {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [profilePicture, setProfilePicture] = useState('');\r\n    const [uiLoading, setUiLoading] = useState(false);\r\n    const [buttonLoading, setButtonLoading] = useState(false);\r\n    const [imageError, setImageError] = useState('');\r\n    const [errorMsg, setErrorMsg] = useState([]);\r\n    const [imageChange, setImageChange] = useState('');\r\n\r\n\tconst handleFirstNameChange = (event) => {\r\n        setFirstName(event.target.value)\r\n    }\r\n    const handleLastNameChange = (event) => {\r\n        setLastName(event.target.value)\r\n    }\r\n    const handlePhoneNumberChange = (event) => {\r\n        setPhoneNumber(event.target.value)\r\n    }\r\n    const handleCountryChange = (event) => {\r\n        setCountry(event.target.value)\r\n    }\r\n    const handleUsernameChange = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n    const handleProfilePictureChange = (event) => {\r\n        setProfilePicture(event.target.value)\r\n    }\r\n    const handleUiLoading = (event) => {\r\n        setUiLoading(event.target.value)\r\n    }\r\n    const handleButtonLoading = (event) => {\r\n        setButtonLoading(event.target.value)\r\n    }\r\n    const handleImageError = (event) => {\r\n        setImageError(event.target.value)\r\n    }\r\n    const handleErrorMsg = (event) => {\r\n        setErrorMsg(event.target.value)\r\n    }\r\n    const handleImageChange = (event) => {\r\n        setImageChange(event.target.files[0])\r\n\t};\r\n    useEffect(() => {\r\n        console.log('lolol')\r\n        authMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\taxios\r\n\t\t\t.get('/user')\r\n\t\t\t.then((response) => {\r\n                const {data: {userCredentials}} = response;\r\n                console.log(response.data);\r\n                \r\n                setFirstName(userCredentials.firstName)\r\n                setLastName(userCredentials.lastName)\r\n                setEmail(userCredentials.email)\r\n                setPhoneNumber(userCredentials.phoneNumber)\r\n                setCountry(userCredentials.country)\r\n                setUsername(userCredentials.username)\r\n                setUiLoading(false)\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif (error.response.status === 403) {\r\n\t\t\t\t\tprops.history.push('/login');\r\n\t\t\t\t}\r\n                console.log(error);\r\n                setErrorMsg('Error in retrieving the data')\r\n\t\t\t});\r\n\r\n    },[]) \r\n\t\r\n\r\n\tconst profilePictureHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tsetUiLoading(true)\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\tlet form_data = new FormData();\r\n\t\tform_data.append('image', props.image);\r\n\t\tform_data.append('content', props.content);\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\taxios\r\n\t\t\t.post('/user/image', form_data, {\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'content-type': 'multipart/form-data'\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif (error.response.status === 403) {\r\n\t\t\t\t\tprops.history.push('/login');\r\n\t\t\t\t}\r\n                console.log(error);\r\n                setUiLoading(false)\r\n                setImageError('Error in posting the data')\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst updateFormValues = (event) => {\r\n        event.preventDefault();\r\n        setButtonLoading(true)\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\tconst formRequest = {\r\n            firstName,\r\n            lastName,\r\n            country\r\n        };\r\n\t\taxios\r\n            .post('/user', formRequest)\r\n\t\t\t.then(() => {\r\n                setButtonLoading(false)\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif (error.response.status === 403) {\r\n\t\t\t\t\tprops.history.push('/login');\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tsetButtonLoading(false)\r\n\t\t\t});\r\n\t};\r\n\r\nconst { classes, ...rest } = props;\r\n\t\tif (uiLoading === true) {\r\n\t\t\treturn (\r\n\t\t\t\t<main className={classes.content}>\r\n\t\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t\t{uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\r\n\t\t\t\t</main>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<main className={classes.content}>\r\n\t\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\r\n\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t<div className={classes.details}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Typography className={classes.locationText} gutterBottom variant=\"h4\">\r\n\t\t\t\t\t\t\t\t\t\t{firstName} {lastName}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\tstartIcon={<CloudUploadIcon />}\r\n\t\t\t\t\t\t\t\t\t\tclassName={classes.uploadButton}\r\n\t\t\t\t\t\t\t\t\t\tonClick={profilePictureHandler}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tUpload Photo\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<input type=\"file\" onChange={handleImageChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t{imageError ? (\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.customError}>\r\n\t\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t\tWrong Image Format || Supported Format are PNG and JPG\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\tfalse\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={classes.progress} />\r\n\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t</Card>\r\n\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Card {...rest} className={clsx(classes.root, classes)}>\r\n\t\t\t\t\t\t<form autoComplete=\"off\" noValidate>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"First name\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={firstName}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleFirstNameChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Last name\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"lastName\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={lastName}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleLastNameChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={phoneNumber}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handlePhoneNumberChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"User Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"userHandle\"\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleUsernameChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item md={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Country\"\r\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"country\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={country}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleCountryChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t<CardActions />\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName={classes.submitButton}\r\n\t\t\t\t\t\tonClick={updateFormValues}\r\n\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\tbuttonLoading ||\r\n\t\t\t\t\t\t\t!firstName ||\r\n\t\t\t\t\t\t\t!lastName ||\r\n\t\t\t\t\t\t\t!country\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSave details\r\n\t\t\t\t\t\t{buttonLoading && <CircularProgress size={30} className={classes.progess} />}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</main>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n// }\r\n\r\nexport default withStyles(styles)(Account);","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\todo.js",["89","90","91"],"import React, { Component, useEffect, useState } from 'react'\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport axios from 'axios';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { authMiddleWare } from '../util/auth';\r\n\r\n\r\nconst styles = (theme) => ({\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n\r\n\ttitle: {\r\n\t\tmarginLeft: theme.spacing(2),\r\n\t\tflex: 1\r\n\t},\r\n\tsubmitButton: {\r\n\t\tdisplay: 'block',\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tposition: 'absolute',\r\n\t\ttop: 14,\r\n\t\tright: 10\r\n\t},\r\n\tfloatingButton: {\r\n\t\tposition: 'fixed',\r\n\t\tbottom: 0,\r\n\t\tright: 0\r\n\t},\r\n\tform: {\r\n\t\twidth: '98%',\r\n\t\tmarginLeft: 13,\r\n\t\tmarginTop: theme.spacing(3)\r\n\t},\r\n\ttoolbar: theme.mixins.toolbar,\r\n\troot: {\r\n\t\tminWidth: 470\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t\ttransform: 'scale(0.8)'\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12\r\n\t},\r\n\tuiProgess: {\r\n\t\tposition: 'fixed',\r\n\t\tzIndex: '1000',\r\n\t\theight: '31px',\r\n\t\twidth: '31px',\r\n\t\tleft: '50%',\r\n\t\ttop: '35%'\r\n\t},\r\n\tdialogeStyle: {\r\n\t\tmaxWidth: '50%'\r\n\t},\r\n\tviewRoot: {\r\n\t\tmargin: 0,\r\n\t\tpadding: theme.spacing(2)\r\n\t},\r\n\tcloseButton: {\r\n\t\tposition: 'absolute',\r\n\t\tright: theme.spacing(1),\r\n\t\ttop: theme.spacing(1),\r\n\t\tcolor: theme.palette.grey[500]\r\n\t}\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nfunction Todo(props) {\r\n    const [todos, setTodos] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [todoId, setTodoId] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [uiLoading, setUiLoading] = useState(true);\r\n    const [buttonType, setButtonType] = useState('');\r\n    const [viewOpen, setViewOpen] = useState(false);\r\n\r\n    const handleTitleChange = (event) => {\r\n        setTitle(event.target.value)\r\n    }\r\n    const handleBodyChange = (event) => {\r\n        setBody(event.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\taxios\r\n\t\t\t.get('/todos')\r\n\t\t\t.then((response) => {\r\n                setTodos(response.data)\r\n                setUiLoading(false)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n    },[])  \r\n\r\n\tconst deleteTodoHandler = (todo) => {\r\n        console.log(todo)\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\tconst {todoId} = todo;\r\n\t\taxios\r\n\t\t\t.delete(`todo/${todoId}`)\r\n\t\t\t.then((response) => {\r\n                console.log(response)\r\n                ///Work in progress, state ist~ :-D\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tconst handleEditClickOpen = (todo) => {\r\n        setTitle(todo.title)\r\n        setBody(todo.body)\r\n        setTodoId(todo.todoId)\r\n        setButtonType('Edit')\r\n        setOpen(true)\r\n\t}\r\n\r\n\tconst handleViewOpen = (todo) => {\r\n        setTitle(todo.title)\r\n        setBody(todo.body)\r\n        setViewOpen(true)\r\n\t}\r\n\r\n\r\n    const DialogTitle = withStyles(styles)((props) => {\r\n        const { children, classes, onClose, ...other } = props;\r\n        return (\r\n            <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n                <Typography variant=\"h6\">{children}</Typography>\r\n                {onClose ? (\r\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ) : null}\r\n            </MuiDialogTitle>\r\n        );\r\n    });\r\n\r\n    const DialogContent = withStyles((theme) => ({\r\n        viewRoot: {\r\n            padding: theme.spacing(2)\r\n        }\r\n    }))(MuiDialogContent);\r\n\r\n    dayjs.extend(relativeTime);\r\n    const { classes } = props;\r\n    // const { open, errors, viewOpen } = state;\r\n    ///Behöver jag dessa?!?!?!\r\n    const handleClickOpen = () => {\r\n        setTodoId('')\r\n        setTitle('')\r\n        setBody('')\r\n        setButtonType('')\r\n        setOpen(true)\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        authMiddleWare(props.history);\r\n        event.preventDefault();\r\n        const userTodo = {\r\n            title,\r\n            body,\r\n        };\r\n        let options = {};\r\n        if (buttonType === 'Edit') {\r\n            options = {\r\n                url: `/todo/${todoId}`,\r\n                method: 'put',\r\n                data: userTodo\r\n            };\r\n        } else {\r\n            options = {\r\n                url: '/todo',\r\n                method: 'post',\r\n                data: userTodo\r\n            };\r\n        }\r\n    const authToken = localStorage.getItem('AuthToken');\r\n    axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n    axios(options)\r\n        .then(() => {\r\n            setOpen(false)\r\n            window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n            setOpen(true)\r\n            setErrors(error.response.data)\r\n            // this.setState({ open: true, errors: error.response.data });\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    const handleViewClose = () => {\r\n        setViewOpen(false)\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        setOpen(false)\r\n    };\r\n\r\n    if (uiLoading === true) {\r\n        return (\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\r\n            </main>\r\n        );\r\n    } else {\r\n        return (\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n\r\n                <IconButton\r\n                    className={classes.floatingButton}\r\n                    color=\"primary\"\r\n                    aria-label=\"Add Todo\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    <AddCircleIcon style={{ fontSize: 60 }} />\r\n                </IconButton>\r\n                <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                    <AppBar className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                {buttonType === 'Edit' ? 'Edit Todo' : 'Create a new Todo'}\r\n                            </Typography>\r\n                            <Button\r\n                                autoFocus\r\n                                color=\"inherit\"\r\n                                onClick={handleSubmit}\r\n                                className={classes.submitButton}\r\n                            >\r\n                                {buttonType === 'Edit' ? 'Save' : 'Submit'}\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"todoTitle\"\r\n                                    label=\"Todo Title\"\r\n                                    name=\"title\"\r\n                                    autoComplete=\"todoTitle\"\r\n                                    helperText={errors.title}\r\n                                    value={title}\r\n                                    error={errors.title ? true : false}\r\n                                    onChange={handleTitleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"todoDetails\"\r\n                                    label=\"Todo Details\"\r\n                                    name=\"body\"\r\n                                    autoComplete=\"todoDetails\"\r\n                                    multiline\r\n                                    rows={25}\r\n                                    rowsMax={25}\r\n                                    helperText={errors.body}\r\n                                    error={errors.body ? true : false}\r\n                                    onChange={handleBodyChange}\r\n                                    value={body}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Dialog>\r\n\r\n                <Grid container spacing={2}>\r\n                    {todos.map((todo) => (\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Card className={classes.root} variant=\"outlined\">\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        {todo.title}\r\n                                    </Typography>\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        {dayjs(todo.createdAt).fromNow()}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        {`${todo.body.substring(0, 65)}`}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => handleViewOpen( todo )}>\r\n                                        {' '}\r\n                                        View{' '}\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => handleEditClickOpen( todo )}>\r\n                                        Edit\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => deleteTodoHandler( todo )}>\r\n                                        Delete\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <Dialog\r\n                    onClose={handleViewClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={viewOpen}\r\n                    fullWidth\r\n                    classes={{ paperFullWidth: classes.dialogeStyle }}\r\n                >\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleViewClose}>\r\n                        {title}\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"todoDetails\"\r\n                            name=\"body\"\r\n                            multiline\r\n                            readonly\r\n                            rows={1}\r\n                            rowsMax={25}\r\n                            value={body}\r\n                            InputProps={{\r\n                                disableUnderline: true\r\n                            }}\r\n                        />\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\t\r\n\r\n\r\n\r\nexport default (withStyles(styles)(Todo));","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\blog.js",["92","93","94"],"import React, { Component, useEffect, useState } from 'react'\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport axios from 'axios';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport { authMiddleWare } from '../util/auth';\r\n\r\n\r\nconst styles = (theme) => ({\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n\r\n\ttitle: {\r\n\t\tmarginLeft: theme.spacing(2),\r\n\t\tflex: 1\r\n\t},\r\n\tsubmitButton: {\r\n\t\tdisplay: 'block',\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tposition: 'absolute',\r\n\t\ttop: 14,\r\n\t\tright: 10\r\n\t},\r\n\tfloatingButton: {\r\n\t\tposition: 'fixed',\r\n\t\tbottom: 0,\r\n\t\tright: 0\r\n\t},\r\n\tform: {\r\n\t\twidth: '98%',\r\n\t\tmarginLeft: 13,\r\n\t\tmarginTop: theme.spacing(3)\r\n\t},\r\n\ttoolbar: theme.mixins.toolbar,\r\n\troot: {\r\n\t\tminWidth: 470\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t\ttransform: 'scale(0.8)'\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12\r\n\t},\r\n\tuiProgess: {\r\n\t\tposition: 'fixed',\r\n\t\tzIndex: '1000',\r\n\t\theight: '31px',\r\n\t\twidth: '31px',\r\n\t\tleft: '50%',\r\n\t\ttop: '35%'\r\n\t},\r\n\tdialogeStyle: {\r\n\t\tmaxWidth: '50%'\r\n\t},\r\n\tviewRoot: {\r\n\t\tmargin: 0,\r\n\t\tpadding: theme.spacing(2)\r\n\t},\r\n\tcloseButton: {\r\n\t\tposition: 'absolute',\r\n\t\tright: theme.spacing(1),\r\n\t\ttop: theme.spacing(1),\r\n\t\tcolor: theme.palette.grey[500]\r\n\t}\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nfunction Blog(props) {\r\n    const [blogs, setBlogs] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [blogId, setBlogId] = useState('');\r\n    const [errors, setErrors] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [uiLoading, setUiLoading] = useState(true);\r\n    const [buttonType, setButtonType] = useState('');\r\n    const [viewOpen, setViewOpen] = useState(false);\r\n\r\n    const handleTitleChange = (event) => {\r\n        setTitle(event.target.value)\r\n    }\r\n    const handleBodyChange = (event) => {\r\n        setBody(event.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\taxios\r\n\t\t\t.get('/blogs')\r\n\t\t\t.then((response) => {\r\n                setBlogs(response.data)\r\n                setUiLoading(false)\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n    },[])  \r\n\r\n\tconst deleteBlogHandler = (blog) => {\r\n        console.log(blog)\r\n\t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\tconst {blogId} = blog;\r\n\t\taxios\r\n\t\t\t.delete(`blog/${blogId}`)\r\n\t\t\t.then((response) => {\r\n                console.log(response)\r\n                ///Work in progress, state ist~ :-D\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tconst handleEditClickOpen = (blog) => {\r\n        setTitle(blog.title)\r\n        setBody(blog.body)\r\n        setBlogId(blog.blogId)\r\n        setButtonType('Edit')\r\n        setOpen(true)\r\n\t}\r\n\r\n\tconst handleViewOpen = (blog) => {\r\n        setTitle(blog.title)\r\n        setBody(blog.body)\r\n        setViewOpen(true)\r\n\t}\r\n\r\n\r\n    const DialogTitle = withStyles(styles)((props) => {\r\n        const { children, classes, onClose, ...other } = props;\r\n        return (\r\n            <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n                <Typography variant=\"h6\">{children}</Typography>\r\n                {onClose ? (\r\n                    <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ) : null}\r\n            </MuiDialogTitle>\r\n        );\r\n    });\r\n\r\n    const DialogContent = withStyles((theme) => ({\r\n        viewRoot: {\r\n            padding: theme.spacing(2)\r\n        }\r\n    }))(MuiDialogContent);\r\n\r\n    dayjs.extend(relativeTime);\r\n    const { classes } = props;\r\n    // const { open, errors, viewOpen } = state;\r\n    ///Behöver jag dessa?!?!?!\r\n    const handleClickOpen = () => {\r\n        setBlogId('')\r\n        setTitle('')\r\n        setBody('')\r\n        setButtonType('')\r\n        setOpen(true)\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        authMiddleWare(props.history);\r\n        event.preventDefault();\r\n        const userBlog = {\r\n            title,\r\n            body,\r\n        };\r\n        let options = {};\r\n        if (buttonType === 'Edit') {\r\n            options = {\r\n                url: `/blog/${blogId}`,\r\n                method: 'put',\r\n                data: userBlog\r\n            };\r\n        } else {\r\n            options = {\r\n                url: '/blog',\r\n                method: 'post',\r\n                data: userBlog\r\n            };\r\n        }\r\n    const authToken = localStorage.getItem('AuthToken');\r\n    axios.defaults.headers.common = { Authorization: `${authToken}` };\r\n    axios(options)\r\n        .then(() => {\r\n            setOpen(false)\r\n            window.location.reload();\r\n        })\r\n        .catch((error) => {\r\n            setOpen(true)\r\n            setErrors(error.response.data)\r\n            // this.setState({ open: true, errors: error.response.data });\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    const handleViewClose = () => {\r\n        setViewOpen(false)\r\n    };\r\n\r\n    const handleClose = (event) => {\r\n        setOpen(false)\r\n    };\r\n\r\n    if (uiLoading === true) {\r\n        return (\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\r\n            </main>\r\n        );\r\n    } else {\r\n        return (\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n\r\n                <IconButton\r\n                    className={classes.floatingButton}\r\n                    color=\"primary\"\r\n                    aria-label=\"Add Blog\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    <AddCircleIcon style={{ fontSize: 60 }} />\r\n                </IconButton>\r\n                <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                    <AppBar className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                {buttonType === 'Edit' ? 'Edit Blog' : 'Create a new Blog'}\r\n                            </Typography>\r\n                            <Button\r\n                                autoFocus\r\n                                color=\"inherit\"\r\n                                onClick={handleSubmit}\r\n                                className={classes.submitButton}\r\n                            >\r\n                                {buttonType === 'Edit' ? 'Save' : 'Submit'}\r\n                            </Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n\r\n                    <form className={classes.form} noValidate>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"blogTitle\"\r\n                                    label=\"Blog Title\"\r\n                                    name=\"title\"\r\n                                    autoComplete=\"blogTitle\"\r\n                                    helperText={errors.title}\r\n                                    value={title}\r\n                                    error={errors.title ? true : false}\r\n                                    onChange={handleTitleChange}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"blogDetails\"\r\n                                    label=\"Blog Details\"\r\n                                    name=\"body\"\r\n                                    autoComplete=\"blogDetails\"\r\n                                    multiline\r\n                                    rows={25}\r\n                                    rowsMax={25}\r\n                                    helperText={errors.body}\r\n                                    error={errors.body ? true : false}\r\n                                    onChange={handleBodyChange}\r\n                                    value={body}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Dialog>\r\n\r\n                <Grid container spacing={2}>\r\n                    {blogs.map((blog) => (\r\n                        <Grid item xs={12} sm={6}>\r\n                            <Card className={classes.root} variant=\"outlined\">\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        {blog.title}\r\n                                    </Typography>\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        {dayjs(blog.createdAt).fromNow()}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        {`${blog.body.substring(0, 65)}`}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => handleViewOpen( blog )}>\r\n                                        {' '}\r\n                                        View{' '}\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => handleEditClickOpen( blog )}>\r\n                                        Edit\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => deleteBlogHandler( blog )}>\r\n                                        Delete\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <Dialog\r\n                    onClose={handleViewClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={viewOpen}\r\n                    fullWidth\r\n                    classes={{ paperFullWidth: classes.dialogeStyle }}\r\n                >\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleViewClose}>\r\n                        {title}\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"blogDetails\"\r\n                            name=\"body\"\r\n                            multiline\r\n                            readonly\r\n                            rows={1}\r\n                            rowsMax={25}\r\n                            value={body}\r\n                            InputProps={{\r\n                                disableUnderline: true\r\n                            }}\r\n                        />\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\t\r\n\r\n\r\n\r\nexport default (withStyles(styles)(Blog));","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\admin.js",["95","96","97","98","99","100","101","102","103","104","105","106","107"],"import React, { Component, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Account from '../components/account';\r\nimport Todo from '../components/todo';\r\nimport Blog from '../components/blog';\r\nimport Resume from './resume';\r\nimport About from './about';\r\nimport Dashboard from '.';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport Avatar from '@material-ui/core/avatar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { authMiddleWare } from '../util/auth'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex'\r\n\t},\r\n\tappBar: {\r\n\t\tzIndex: theme.zIndex.drawer + 1\r\n\t},\r\n\tdrawer: {\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0\r\n\t},\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3)\r\n\t},\r\n\tavatar: {\r\n\t\theight: 110,\r\n\t\twidth: 100,\r\n\t\tflexShrink: 0,\r\n\t\tflexGrow: 0,\r\n\t\tmarginTop: 20\r\n\t},\r\n\tuiProgess: {\r\n\t\tposition: 'fixed',\r\n\t\tzIndex: '1000',\r\n\t\theight: '31px',\r\n\t\twidth: '31px',\r\n\t\tleft: '50%',\r\n\t\ttop: '35%'\r\n\t},\r\n\ttoolbar: theme.mixins.toolbar\r\n});\r\n\r\nfunction Admin(props) {\r\n    const [render, setRender] = useState(false);\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [uiLoading, setUiLoading] = useState(false);\r\n    const [profilePicture, setProfilePicture] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const [imageLoading, setimageLoading] = useState(false);\r\n    const [renderPage, setRenderPage] = useState(<Account/ >);\r\n\r\n\r\n    const loadAccountPage = (event) => {\r\n        // setRender(true)\r\n        setRenderPage(<Account />)\r\n    }\r\n\r\n    const loadDashboardPage = (event) => {\r\n        // setRender(true)\r\n        setRenderPage(<Dashboard />)\r\n    }\r\n\r\n    const loadAboutPage = (event) => {\r\n        // setRender(true)\r\n        setRenderPage(<About />)\r\n    }\r\n\r\n    const loadResumePage = (event) => {\r\n        // setRender(true)\r\n        setRenderPage(<Resume />)\r\n    }\r\n\r\n    const loadBlogPage = (event) => {\r\n        setRenderPage(<Blog />)\r\n    }\r\n\t\r\n    const loadTodoPage = (event) => {\r\n        setRenderPage(<Todo />)\r\n    }\r\n\t\r\n    const logoutHandler = (event) => {\r\n        localStorage.removeItem('AuthToken');\r\n        props.history.push('/login');\r\n    }\r\n    \r\n    useEffect(() => {\r\n   \t\tauthMiddleWare(props.history);\r\n\t\tconst authToken = localStorage.getItem('AuthToken');\r\n\t\taxios.defaults.headers.common = { Authorization: `${authToken}` };\r\n\t\taxios\r\n\t\t\t.get('/user')\r\n\t\t\t.then((response) => {\r\n                console.log(response.data + '123');\r\n\r\n\t\t\t\tconst {data: {userCredentials}} = response;\r\n                setFirstName(userCredentials.firstName)\r\n                setLastName(userCredentials.lastName)\r\n                setEmail(userCredentials.email)\r\n                setPhoneNumber(userCredentials.phoneNumber)\r\n                setCountry(userCredentials.country)\r\n                setUsername(userCredentials.username)\r\n                setUiLoading(false)\r\n                setProfilePicture(userCredentials.imageUrl)\r\n\t\t\t\t})\r\n\t\t\t\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tif(error.response.status === 403) {\r\n\t\t\t\t\tprops.history.push('/login')\r\n\t\t\t\t}\r\n                console.log(error);\r\n                setErrorMsg('Error in retrieving the data')\r\n\t\t\t\t// this.setState({ errorMsg: 'Error in retrieving the data' });\r\n\t\t\t});\r\n\t},[])  \r\n    \r\n\r\n\t\tconst { classes } = props;\t\t\r\n\t\tif (uiLoading === true) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t{uiLoading && <CircularProgress size={150} className={classes.uiProgess} />}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t<CssBaseline />\r\n\t\t\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\r\n\t\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t\t<Typography variant=\"h6\" noWrap>\r\n\t\t\t\t\t\t\t\tTodoApp\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t</AppBar>\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tclassName={classes.drawer}\r\n\t\t\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t<center>\r\n\t\t\t\t\t\t\t<Avatar src={profilePicture} className={classes.avatar} />\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{firstName} {lastName}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</center>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t<List>\r\n                        <ListItem button key=\"Home\" onClick={loadDashboardPage}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<NotesIcon />{' '}\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Home\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n                            <ListItem button key=\"About\" onClick={loadAboutPage}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<NotesIcon />{' '}\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary=\"About\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n                            <ListItem button key=\"Resume\" onClick={loadResumePage}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<NotesIcon />{' '}\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Resume\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n                            <ListItem button key=\"Todo\" onClick={loadTodoPage}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<NotesIcon />{' '}\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Todo\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\r\n                            <ListItem button key=\"Blog\" onClick={loadBlogPage}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<NotesIcon />{' '}\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Blog\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t\t<ListItem button key=\"Account\" onClick={loadAccountPage}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<AccountBoxIcon />{' '}\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Account\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\r\n\t\t\t\t\t\t\t<ListItem button key=\"Logout\" onClick={logoutHandler}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t<ExitToAppIcon />{' '}\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary=\"Logout\" />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</Drawer>\r\n                    \r\n                    <div>{renderPage}</div>\r\n                    {/* <div>{render ? <Account /> : <Todo />}</div> */}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\nexport default withStyles(styles)(Admin);\r\n","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\about.js",["108","109"],"import React from 'react'\r\nimport '../util/global.scss';\r\nimport '../util/about.scss';\r\nimport background from '../util/images/background.jpg';\r\nimport leon1 from '../util/images/leon1.png'\r\n\r\nimport Sidenav from '../components/sidenav';\r\n\r\nexport default function About() {\r\n\r\n       return(<div>\r\n\r\n        <div className=\"lines\">\r\n            \r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n        </div>\r\n        <Sidenav />\r\n        <div className=\"aboutMain\">\r\n            <div className=\"aboutTitle\">\r\n                LEON LINDQVIST\r\n            </div>\r\n            <div className=\"aboutSubtitle\">\r\n                FRONT END DEVELOPER IN THE MAKING\r\n            </div>\r\n            <div className=\"aboutContainer\">\r\n            <img className=\"aboutImg\" src={leon1} />\r\n            <div className=\"aboutText speech-bubble-about\">\r\n                <div>I live and work in Stockholm.</div>\r\n                <div>I have spent quite a few years working as as various administrative and supportive roles within IT, but eventually came to a point where i wanted something more creative.</div>\r\n                <div>Problem solving has become the core of what i do professionally, i only recently shiftedthat focus from peoples technical issues, to understanding javascript instead!</div>\r\n                <div>I have always had a deep love for video games of every kind, along with working outin various ways. Its all about balance for the mind and body!</div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    \r\n        <div className=\"copyrightInfo\">\r\n            <div className=\"info\">leon.lindqvist@gmail.com</div>\r\n            <div className=\"info\">© 2020 Leon Lindqvist</div>\r\n        </div>\r\n            \r\n\r\n    </div>)\r\n}\r\n\r\n","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\resume.js",["110","111"],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\index.js",["112","113","114"],"import React from 'react'\r\nimport '../util/global.scss';\r\nimport '../util/index.scss';\r\nimport background from '../util/images/background.jpg';\r\nimport leon2 from '../util/images/leon2.png';\r\nimport bgpic from '../util/images/bgpic3.jpg';\r\n\r\nimport Sidenav from '../components/sidenav';\r\n\r\nexport default function Index() {\r\n\r\n    \r\n    return(<div className=\"containerHtml\" >\r\n\r\n        <div className=\"lines\">\r\n            \r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n            <div className=\"line\"></div>\r\n        </div>\r\n        <Sidenav />\r\n        <div className=\"indexMain\">\r\n            <div className=\"indexTitle\">\r\n            LEON LINDQVIST\r\n            \r\n            </div>\r\n            <div className=\"indexSubtitle\">\r\n            FRONT END DEVELOPER IN THE MAKING\r\n            </div>\r\n            {/* <div className=\"indexSub\"> */}\r\n                <img className=\"indexImg\" src={leon2} />\r\n                <div className=\"indexText speech-bubble\">\r\n                    <div>Hello! Welcome to my portfolio.</div><br />\r\n                    <div>I am a web developer who went from disliking code to enjoying it tremendously. Early on i had little passion for coding, but eventually found the satisfaction in creating with my own hands.</div><br />\r\n                    <div>I live and work in Stockholm and have spent quite a few years as various administrative and supportive roles within IT, but eventually came to a point where i wanted something more creative.</div><br />\r\n                    <div>Problem solving has become the core of what i do professionally, i only recently shifted that focus from peoples technical issues, to understanding javascript instead!</div><br />\r\n                    <div>I have always had a deep love for video games of every kind, along with working outin various ways. Its all about balance for the mind and body!</div>\r\n                </div>\r\n            {/* </div> */}\r\n\r\n        </div>\r\n        {/* <div className=\"ovals\">\r\n            <div className=\"oval\">Developer</div>\r\n            <div className=\"oval\">Technician</div>\r\n            <div className=\"oval\">Nerd</div>\r\n        </div> */}\r\n\r\n        <div className=\"copyrightInfo\">\r\n            <div className=\"info\">leon.lindqvist@gmail.com</div>\r\n            <div className=\"info\">© 2020 Leon Lindqvist</div>\r\n        </div>\r\n            \r\n\r\n    </div>)\r\n}\r\n\r\n","J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\pages\\publicblog.js",[],"J:\\Webutveckling\\PortfolioProject\\portfolioleon\\src\\components\\sidenav.js",["115","116","117","118","119","120"],"import React from 'react'\r\nimport '../util/sidenav.scss';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n  } from \"react-router-dom\";\r\n\r\nexport default function Sidenav() {\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n    <header class=\"header\" role=\"banner\">\r\n        <h1 class=\"logo\">\r\n            <a href=\"#\">Leon <span>Lindqvist</span></a>\r\n        </h1>\r\n        <div class=\"nav-wrap\">\r\n            <nav class=\"main-nav\" role=\"navigation\">\r\n            <ul class=\"unstyled list-hover-slide\">\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                {/* <li><Link to=\"/about\">About</Link></li> */}\r\n                <li><Link to=\"/resume\">Resume</Link></li>\r\n                <li><Link to=\"/publicblog\">Blog</Link></li>\r\n            </ul>\r\n            </nav>\r\n            {/* <ul class=\"social-links list-inline unstyled list-hover-slide\">\r\n            <li><a href=\"#\">Twitter</a></li>\r\n            <li><a href=\"#\">Google+</a></li>\r\n            <li><a href=\"#\">GitHub</a></li>\r\n            <li><a href=\"#\">CodePen</a></li>\r\n            </ul> */}\r\n        </div>\r\n    </header>\r\n    // <div className=\"nav-wrap\">\r\n    //     <div className=\"main-nav\">\r\n    //         <div className=\"unstyled list-hover-slide\">\r\n    //             <ul>\r\n    //             {/* className=\"active\" */}\r\n    //             <li >\r\n    //                 <Link to=\"/\">Home</Link>\r\n    //             </li>\r\n    //             <li>\r\n    //                 <Link to=\"/about\">About</Link>\r\n    //             </li>\r\n    //             <li>\r\n    //                 <Link to=\"/resume\">Resume</Link>\r\n    //             </li>\r\n    //             <li>\r\n    //                 <Link to=\"/publicblog\">Blog</Link>\r\n    //             </li>\r\n    //             </ul>\r\n    //         </div>\r\n    //     </div>\r\n    // </div>\r\n    )\r\n}\r\n\r\n",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":8,"column":8,"nodeType":"127","messageId":"128","endLine":8,"endColumn":12},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"130","line":82,"column":11,"nodeType":"127","messageId":"128","endLine":82,"endColumn":29},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"131","line":71,"column":12,"nodeType":"127","messageId":"128","endLine":71,"endColumn":26},{"ruleId":"125","severity":1,"message":"132","line":75,"column":12,"nodeType":"127","messageId":"128","endLine":75,"endColumn":20},{"ruleId":"125","severity":1,"message":"133","line":76,"column":12,"nodeType":"127","messageId":"128","endLine":76,"endColumn":23},{"ruleId":"125","severity":1,"message":"134","line":96,"column":11,"nodeType":"127","messageId":"128","endLine":96,"endColumn":37},{"ruleId":"125","severity":1,"message":"135","line":99,"column":11,"nodeType":"127","messageId":"128","endLine":99,"endColumn":26},{"ruleId":"125","severity":1,"message":"136","line":102,"column":11,"nodeType":"127","messageId":"128","endLine":102,"endColumn":30},{"ruleId":"125","severity":1,"message":"137","line":105,"column":11,"nodeType":"127","messageId":"128","endLine":105,"endColumn":27},{"ruleId":"125","severity":1,"message":"138","line":108,"column":11,"nodeType":"127","messageId":"128","endLine":108,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":141,"column":7,"nodeType":"141","endLine":141,"endColumn":9,"suggestions":"142"},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":59,"column":2,"nodeType":"145","messageId":"146","endLine":59,"endColumn":9},{"ruleId":"139","severity":1,"message":"140","line":130,"column":7,"nodeType":"141","endLine":130,"endColumn":9,"suggestions":"147"},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":59,"column":2,"nodeType":"145","messageId":"146","endLine":59,"endColumn":9},{"ruleId":"139","severity":1,"message":"140","line":130,"column":7,"nodeType":"141","endLine":130,"endColumn":9,"suggestions":"148"},{"ruleId":"125","severity":1,"message":"129","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"149","line":69,"column":12,"nodeType":"127","messageId":"128","endLine":69,"endColumn":18},{"ruleId":"125","severity":1,"message":"150","line":69,"column":20,"nodeType":"127","messageId":"128","endLine":69,"endColumn":29},{"ruleId":"125","severity":1,"message":"151","line":72,"column":12,"nodeType":"127","messageId":"128","endLine":72,"endColumn":23},{"ruleId":"125","severity":1,"message":"152","line":73,"column":12,"nodeType":"127","messageId":"128","endLine":73,"endColumn":19},{"ruleId":"125","severity":1,"message":"153","line":74,"column":12,"nodeType":"127","messageId":"128","endLine":74,"endColumn":20},{"ruleId":"125","severity":1,"message":"154","line":75,"column":12,"nodeType":"127","messageId":"128","endLine":75,"endColumn":17},{"ruleId":"125","severity":1,"message":"155","line":78,"column":12,"nodeType":"127","messageId":"128","endLine":78,"endColumn":17},{"ruleId":"125","severity":1,"message":"156","line":78,"column":19,"nodeType":"127","messageId":"128","endLine":78,"endColumn":27},{"ruleId":"125","severity":1,"message":"132","line":79,"column":12,"nodeType":"127","messageId":"128","endLine":79,"endColumn":20},{"ruleId":"125","severity":1,"message":"157","line":80,"column":12,"nodeType":"127","messageId":"128","endLine":80,"endColumn":24},{"ruleId":"125","severity":1,"message":"158","line":80,"column":26,"nodeType":"127","messageId":"128","endLine":80,"endColumn":41},{"ruleId":"139","severity":1,"message":"140","line":145,"column":4,"nodeType":"141","endLine":145,"endColumn":6,"suggestions":"159"},{"ruleId":"125","severity":1,"message":"160","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":28,"column":13,"nodeType":"163","endLine":28,"endColumn":53},{"ruleId":"125","severity":1,"message":"160","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":27,"column":13,"nodeType":"163","endLine":27,"endColumn":54},{"ruleId":"125","severity":1,"message":"160","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":18},{"ruleId":"125","severity":1,"message":"164","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":31,"column":17,"nodeType":"163","endLine":31,"endColumn":57},{"ruleId":"125","severity":1,"message":"165","line":4,"column":22,"nodeType":"127","messageId":"128","endLine":4,"endColumn":28},{"ruleId":"125","severity":1,"message":"166","line":5,"column":5,"nodeType":"127","messageId":"128","endLine":5,"endColumn":11},{"ruleId":"125","severity":1,"message":"167","line":6,"column":5,"nodeType":"127","messageId":"128","endLine":6,"endColumn":10},{"ruleId":"125","severity":1,"message":"168","line":8,"column":5,"nodeType":"127","messageId":"128","endLine":8,"endColumn":18},{"ruleId":"125","severity":1,"message":"169","line":9,"column":5,"nodeType":"127","messageId":"128","endLine":9,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":21,"column":13,"nodeType":"163","endLine":21,"endColumn":25},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'blog' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'handleErrorsChange' is assigned a value but never used.","'profilePicture' is assigned a value but never used.","'errorMsg' is assigned a value but never used.","'imageChange' is assigned a value but never used.","'handleProfilePictureChange' is assigned a value but never used.","'handleUiLoading' is assigned a value but never used.","'handleButtonLoading' is assigned a value but never used.","'handleImageError' is assigned a value but never used.","'handleErrorMsg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["174"],"no-dupe-keys","Duplicate key 'toolbar'.","ObjectExpression","unexpected",["175"],["176"],"'render' is assigned a value but never used.","'setRender' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'country' is assigned a value but never used.","'username' is assigned a value but never used.","'email' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'imageLoading' is assigned a value but never used.","'setimageLoading' is assigned a value but never used.",["177"],"'background' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'bgpic' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"178","fix":"180"},{"desc":"178","fix":"181"},{"desc":"178","fix":"182"},"Update the dependencies array to be: [props.history]",{"range":"183","text":"184"},{"range":"185","text":"184"},{"range":"186","text":"184"},{"range":"187","text":"184"},[4138,4140],"[props.history]",[3438,3440],[3438,3440],[4369,4371]]